<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//RU">
<HTML>

<HEAD>
  <LINK rel=stylesheet href="../../css/style.css" type=text/css>
  <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
  <META HTTP-EQUIV="Content-Language" CONTENT="ru">
  <title>Экзаменационные вопросы (часть 2)</title>
  <base target="_top">
</HEAD>

<BODY>
  <div class="title-1">
    Экзаменационные вопросы
  </div>
  <div class="content">
    <p>
      <ol class="list">
        <li>Многопоточное программирование. Понятия процесс и поток. Методы передачи данных между потоками и процессами. Синхронизация
          потоков. Synchronized vs Lock. wait() & notify().</li>
        <li>Клиент-серверное приложение. Веб приложение. Front-end и Back-end разработка. Http-server. Статические и динамические
          ресурсы. Масштабируемость и кластеризация. Понятие кластера. Балансировка запросов.</li>
        <li>Обзор JavaEE. Обзор компонентов стандарта: Servlets, JSP, EJB, JPA, JSTL, JSF, JNDI, JMS, JTA, JAAS. Юнит-тестирование.
          Написание позитивных и негативных тестов.Пример.
        </li>
        <li> Понятие Servlet. Жизненный цикл сервлета. Методы HttpServelet. Класс HttpServletRwquest и HttpServletResponse. Пример
          реализация сервлета.</li>
        <li>Понятие Filter, Listener.Типы Listerner-ов. Жизненный цикл Filter и Listener. Порядок вызова методов объекта, реализующий
          Filter и Listener. Примеры реализации Filter, Listener.</li>
        <li>Регистрация Servlet, Filter, Listener при помощи аннотаций и в web.xml. Файл web.xml. Формат. Основные теги. Пример
          web.xml
        </li>
        <li>Servler и JSP. Компиляция JSP в Servlet. Пример JSP и Servlet с одинаковой логикой. Передача управления JSP. Сравнение
          методов forward() и sendRedirect().</li>
        <li>JSP. Скриплеты. директивы в jsp. HTML. Порядок генерации контента на основе jsp страницы. Пример jsp.</li>
        <li>Session, request, cookies. Жизненные циклы. Атрибуты и параметры Request. Доступ к HttpRequest из Servlet и jsp.
          Передача данных из сервлета в jsp. Пример.</li>
        <li>Библиотеки тегов: JSP, JSTL. Пример использования. Порядок генерации java-кода из jsp с библиотечными тегами. Пользовательские
          теги. Создание, регистрация, Использование. Пример пользовательского тега.</li>
        <li>JPA. Принципы. Реализации. Hibernate. Пример класса и связанной таблицы.</li>
        <li>Hibernate. Конфигурация через Аннотации. Связи Один-к-Одному, Один-ко-Многим, Многие-к-Одному и Многие-ко-Многим.
          Пример добавления записи в таблицу, изменение записи в таблице. Пример изменения данных с использованием Hiberanate.</li>
        <li>Hibernate. Конфигурация через XML. Доступ к данным через объект Сессии. Пример использования Hibernate Session.</li>
        <li>Hibernate. Использование HQL и SQL. Доступ к таблицам через. Criteria. Пример запроса чтения данных с условием.</li>
        <li>JDBC. Регистрация драйвера. Создание Connection к базе данных. DriverManager. Обеспечение транзакционности. Пример
          создания Connection и вставки данных в таблицу.</li>
        <li>JDBC. Работа с Объектом типа Statment, PreparedStatment и CallableStatment.Получение сгенерированных в СУБД значений.
          Пример изменения записи в таблице и вызова хранимой процедуры.</li>
        <li>JDBC. Обработка результата вызова sql запроса. ResultSet. Изменение данных через ResultSet. Пример.</li>
        <li>Spring. Компоненты фреймворка. Наследники класса Использование JDBCTemplate для доступа к базе. Пример.</li>
        <li>Spring. Связывание объектов в Spring. Способы инициализации связанного объекта. Получение объекта. Регистрация в
          XML или через аннотации. Пример xml и java-кода.</li>
        <li>Spring MVC. Реализация контроллеров. Регистрация через XML и аннотации. Получение параметров запроса. Интерцепторы.
          Пример.</li>
        <li>АОП. Подходы реализации АОП. JAspect & Spring AOP. Применение аспектов в Spring. Точки перехвата вызова метода. Описание
          правил перехвата методов. Пример.</li>
        <li>Реализация транзакционности в Spring. Реализация кеширования в Spring. Логирование log4j(2). Примеры.</li>
        <li>Struts2. Библиотеки фреймворка. Подключение Strats2 к проекту. Создание Action. Методы обработки validate() и exectue().Порядок
          регистрации и обработки сообщений и ошибок. Пример класса Action.</li>
        <li>Struts2. Перенаправление обработки в jsp. Генерация ответа в формате JSON. Strats.xml. Понятие пакета в strats.xml.
          Interceptor. Порядок обработки и применение Interceptor. Пример класса Interceptor.</li>
        <li>JSON. Формат. Генерация и обработка. Использование в Servlet, Struts2, Spring MVC. Примеры.</li>
        <li>JMS. Обработка с очередями сообщений. Реализация IBM WebSphere MQ. Подключение к очереди. Пример добавления и чтения
          сообщения из очереди.</li>
        <li>JavaScript. Чувствительность к регистру. Юникод. Точки с запятой. Типы данных. null. NaN. undefined. Глобальный объект.
          Преобразование типов.</li>
        <li>JavaScript. Объявление переменной. Область видимости. Функции. ООП. "use strict". Работа с объектами: создание, удаление,
          редактирование свойств. Prototype. Массивы: foreach, every, some, map, reduce, filter, indexOf. Объекты, подобные
          массивам. this. const.</li>
        <li>jQuery. Базовые селекторы (a[href~=http://], a[href*=jquery], a[href$=.pdf], li:has(a), a:not(:hidden), a:first,
          a:odd, a:even, li:last-child, a:only-child, li:eq(2), li:gt(2), li:lt(7), :disabled, :selected, :visible). Создание
          новых элементов. .size() .get(0) .filter() .slice() .children() .contents() .next() .parents() .prev() .siblings()
          .find() .contains() .is(selector) .closest(). Цепочки вызовов. .each().attr() .removeAttr()</li>
        <li>jQuery. .css(), .width(), .height() .addClass(), .removeClass(), .toggleClass(), .hasClass() .html(), .text() .append(),
          appendTo(), prepend(), prependTo(), before(), after() .remove(), .clone() .val(), .submit() .bind(), one(), on()
          - unbind(), off() .trigger(), .change() .hide(), show(), toggle(), fadeIn(), fadeOut(), fadeTo(), slideDown(),
          slideUp(), slideToggle() - stop() .animate() $.trim(), $,each(), $.grep(), $.map(), $.inArray(), $.makeArray(),
          $.unique(), $.extend(), $.getScript().</li>
      </ol>
    </p>
  </div>
</BODY>

</HTML>