<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//RU">
<HTML>

<HEAD>
  <LINK rel=stylesheet href="../../css/style.css" type=text/css>
  <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
  <META HTTP-EQUIV="Content-Language" CONTENT="ru">
  <title>Экзаменационные вопросы (часть 2)</title>
  <base target="_top">
</HEAD>

<BODY>
  <div class="title-1">
    Экзаменационные вопросы
  </div>
  <div class="content">
    <p>
      <ol class="list">
        <li>История развития современных языков программирования. Введение в современные платформы программирования. </li>
        <li>Высокопродуктивное программирование. Обеспечение высокопродуктивного программирования для современных параллельных платформ.</li>
        <li>Реализация стандартной библиотеки MPI. Механизмы времени выполнения среды ParJava.</li>
        <li>Введение в методы параллельного программирования. Параллельное программирование на основе MPI.</li>
        <li>Разработка приложений в среде ParJava. Исследование и оптимизация процесса составления масштабируемых параллельных программ решения прикладных задач в среде ParJava.</li>
        <li>Языки программирования. Интерфейс прикладных программ. Алгоритмы, универсальные алгоритмические модели. Языки программирования и их классификация. Интерфейс прикладных программ, программирование под Windows.</li>
        <li>История создания и развития Java. Основные особенности платформы и ее эволюция. История создания Java. История развития Java. Платформа Java. Основные версии и продукты. Апплеты. Свойства языка Java. Процесс создания программ на Java.</li>
        <li>Лексика языка Java. Кодировка. Анализ программы: пробелы, комментарии, лексемы. Виды лексем: идентификаторы, ключевые слова, литералы. Операторы языка Java.</li>
        <li>Типы данных в Java. Переменные. Примитивные типы данных, примеры. Ссылочные типы данных, примеры. Классы Object, String, Class.</li>
        <li>Операторы и структура кода. Нормальное и прерванное выполнение операторов. Блоки и локальные переменные. Метки. Условный оператор if. Оператор выбора switch. Операторы для управления циклами. Операторы break и continue. Именованные блоки. Оператор return.</li>
        <li>Имена и пакеты. Простые и составные имена. Различие между именами и идентификаторами. Элементы пакетов, платформенная поддержка пакетов. Модуль компиляции. Уникальность имен пакетов. Область видимости имен.</li>
        <li>Массивы. Объявление и инициализация массивов. Многомерные массивы. Преобразование типов для массивов. Ошибка ArrayStoreException. Клонирование массивов.</li>
        <li>Преобразование типов. Виды преобразований. Тождественное преобразование. Преобразование примитивных типов. Преобразование ссылочных типов. Запрещенные преобразования. Применение приведений.</li>
        <li>Основы объектноориентированного программирования. Методология процедурно-ориентированного и объектно-ориентированного программирования. Объекты: состояние, поведение, уникальность. Классы: инкапсуляция, наследование, полиморфизм. Типы отношений между классами. Метаклассы. Достоинства и недостатки объектно-ориентированного программирования.</li>
        <li>Объявление классов в Java. Модификаторы доступа. Объявление классов. Дополнительные свойства классов: метод main, параметры методов, перегруженные методы.</li>
        <li>Объектная модель в Java. Статические элементы. Ключевые слова this, super. Абстрактные классы. Интерфейсы. Полиморфизм в Java.</li>
        <li>Обработка ошибок в Java. Исключения. Причины возникновения ошибок. Обработка исключительных ситуаций. Конструкции try-catch и try-catch-finally. Оператор throw. Проверяемые и непроверяемые исключения. Создание пользовательских классов исключений. Переопределение методов и исключения.</li>
        <li>Пакет Java.awt. Апплеты. Базовые классы и основные компоненты графического интерфейса пользователя. Менеджеры компоновки. Окна, меню. Обработка событий .</li>
        <li>Пакет Java.io. Система ввода-вывода, потоки данных. Классы InputStream и OutputStream и реализация в классах-наследниках. Классы FileInputStream и FileOutputStream и их наследники. Сериализация объектов. Классы Reader и Writer. Работа с файловой системой .</li>
        <li>Потоки выполнения. Синхронизация. Многопоточная архитектура. Класс Thread и интерфейс Runnable. Работа с приоритетами. Демон-потоки. Модификатор volatile. Блокировки, методы wait, notify, notifyAll.</li>
      </ol>
    </p>
  </div>
</BODY>

</HTML>