<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//RU">
<HTML>
<HEAD>
  <LINK rel=stylesheet href="../../css/styles.css" type=text/css>
  <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
  <META HTTP-EQUIV="Content-Language" CONTENT="ru">
  <title>Тема №9</title>
  <base target="_top">
</HEAD>
<BODY>
  <div class="title-1">
    Тема №9 "Типы данных в Java "
  </div>
  <div class="content">
    <div class="title-2">
      9.1 Переменные. Примитивные типы данных, примеры.
    </div>
    
    <p>
     Есть восемь типов данных, поддерживаемых Java. Основные типы данных предопределены языком и названы по ключевому слову. Теперь давайте посмотрим в деталях эти восемь базовых типов данных существующих в языке программирования Java.
   </p>
   <p>
    <b><i>Тип byte</i></b>
    <ul class="list">
      <li>Тип данных byte является 8-разрядным знаковым целым числом.
      <li>Минимальная величина равна -128 (-27).
      <li>Максимальное значение равно 127 (включительно) (27-1).
      <li>По умолчанию – 0.
    </ul>
  </p>
  <p>
  </p>
  <p>
    <b><i>  Тип short</i></b>
    <ul class="list">
      <li>Тип данных short является 16-разрядным знаковым целым числом.
        <li>Минимальное значение равно -32768 (-215).
          <li>Максимальная величина равна 32 767 (включительно) (215-1).
            <li>Тип short в Java может также использоваться для экономии памяти как byte. Размер short в 2 раза меньше, чем int.
              <li>По умолчанию — 0.
              </ul>
            </p>
            <p>
              <b><i>    Тип int</i></b>
              <ul class="list">
                <li>В языке Java тип данных int является 32-разрядным знаковым целым числом.
                  <li>Минимальный размер int — 2 147 483 648 (-231).
                    <li>Максимальная величина равна 2,147,483,647 (включительно)(231-1).
                      <li>Тип int обычно используется для целых значений. Если нет озабоченности по поводу памяти.
                        <li>По умолчанию равно 0.
                        </ul>
                      </p>
                      <p>
                       <b><i>   Тип long </i></b>
                       <ul class="list">
                        <li>Тип данных long является 64-разрядным знаковым целым числом.
                          <li>Минимальное значение равно — 9,223,372,036,854,775,808 (-263).
                            <li>Максимальная величина — 9,223,372,036,854,775,807 (включительно). (263-1).
                              <li>В Java Применяется когда требуется более широкий диапазон, чем int.
                                <li>По умолчанию — 0L.
                                </ul>   
                              </p>
                              <p>
                                <b><i>   Тип float</i></b>
                                <ul class="list">
                                  <li>Тип данных float является c одинарной точностью 32-битный IEEE 754 с плавающей точкой.
                                    <li>Тип float используется главным образом для сохранения памяти в больших массивах чисел с плавающей точкой.
                                      <li>По умолчанию — 0.0f.
                                        <li>Тип float никогда не должен применяется для точного значения, например, валюты.
                                        </ul>
                                      </p>
                                      <p>
                                       <b><i> Тип double</i></b>
                                       <ul class="list">
                                        <li>Тип данных double является c двойной точностью 64-битный IEEE 754 с плавающей точкой.
                                          <li>Обычно используется для десятичных значений.
                                            <li>Тип double никогда не должен применяется для точного значения, например, валюты.
                                              <li>По умолчанию — 0.0d.
                                              </ul></p>
                                              <p>
                                               <b><i> Тип boolean</i></b>
                                               <ul class="list">
                                                <li>Тип данных boolean представляет собой один бит информации.
                                                  <li>Существует только два возможных значения: true и false.
                                                    <li>Предназначен для простых признаков, которые позволяют отслеживать условия true или false.
                                                      <li>По умолчанию — false.
                                                      </ul></p>
                                                      <p>
                                                        <b><i>Тип char</i></b>
                                                        <ul class="list">
                                                          <li>Тип данных char является одним 16-разрядным символом Юникода.
                                                            <li>Минимальная величина равна «\u0000» (или 0).
                                                              <li>Максимальная величина равна «\uffff» (или 65535 включительно).
                                                                <li>В Java char нужен для хранения любого символа.
                                                                </ul></p>

                                                                <div class="title-2">
                                                                  9.2 Ссылочные типы данных, примеры. Классы Object,String
                                                                </div>

                                                                <p>
                                                                  <b><i> Ссылочные типы данных</i></b> создаются с использованием определенных конструкторов классов. Они предназначены для доступа к объектам. Эти переменные объявляются с определенным типом, который не может быть изменен. Например, Employee, Puppy и т.д.
                                                                </p>
                                                                <p>
                                                                  Объекты класса и различные виды переменных массива подпадают под ссылочный тип данных.
                                                                  По умолчанию в Java значение любой переменной ссылки - null.
                                                                  Ссылочная переменная может применяться для обозначения любого объекта, объявленного или любого совместимого типа.
                                                                </p>
                                                                <br>
                                                                <p>
                                                                 В Java есть специальный суперкласс <b><i>  Object</i></b> и все классы являются его подклассами. Поэтому ссылочная переменная класса Object может ссылаться на объект любого другого класса. Так как массивы являются тоже классами, то переменная класса Object может ссылаться и на любой массив.
                                                               </p>    
                                                               <p>
                                                                 <i>  Метод hashCode()</i>
                                                                 Хеш-код - это целое число, генерируемое на основе конкретного объекта. Его можно рассматривать как шифр с уникальным значением.
                                                               </p>
                                                               <p><i> Метод toString()</i>
                                                                Очень важный метод, возвращающий значение объекта в виде символьной строки.

                                                              Очень часто при использовании метода toString() для получения описания объекта можно получить набор бессмысленных символов, например, [I@421199e8. На самом деле в них есть смысл, доступный специалистом. Он сразу может сказать, что мы имеем дело с одномерным массивом (одна квадратная скобка), который имеет тип int (символ I). Остальные символы тоже что-то означают, но вам знать это не обязательно.</p>
                                                              <br>
                                                              <p><b><i> String</i></b>

                                                               — объект, что представляет последовательность символов. Для создания и манипулирования строками Java платформа предоставляет общедоступный финальный (не может иметь подклассов) класс java.lang.String. Данный класс является неизменяемым (immutable) — созданный объект класса String не может быть изменен. Можно подумать что методы имеют право изменять этот объект, но это неверно. Методы могут только создавать и возвращать новые строки, в которых хранится результат операции. Неизменяемость строк предоставляет ряд возможностей:
                                                               <ul class="list">
                                                                <li>использование строк в многопоточных средах (String является потокобезопасным (thread-safe) )
                                                                  <li>использование String Pool (это коллекция ссылок на String объекты, используется для оптимизации памяти)
                                                                    <li>использование строк в качестве ключей в HashMap (ключ рекомендуется делать неизменяемым)
                                                                    </ul></p>
                                                                  </BODY>
                                                                </HTML>