<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//RU">
<HTML>
<HEAD>
<LINK rel=stylesheet href="../../css/styles.css" type=text/css>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<META HTTP-EQUIV="Content-Language" CONTENT="ru">
<title>Тема №5</title>
<base target="_top">
</HEAD>
<BODY>
  <div class="title-1">
    Тема №5 "Разработка приложений в среде ParJava"
  </div>
  <div class="content">
    <div class="title-2">
        5.1 Исследование и оптимизация процесса составления масштабируемых параллельных программ решения прикладных задач в среде ParJava
    </div>

    <p><b>int MPI_Send</b>(void* buf, int count, MPI_Datatype datatype, int dest, int msgtag, MPI_Comm comm) 
<ul class="list">
<li><i>buf</i> - адрес начала буфера посылки сообщения 
<li><i>count</i> - число передаваемых элементов в сообщении 
<li><i>datatype</i> - тип передаваемых элементов 
<li><i>dest</i> - номер процесса-получателя 
<li><i>msgtag</i> - идентификатор сообщения 
<li><i>comm</i> - идентификатор группы </li></ul>
</p>
<p >Блокирующая посылка сообщения с идентификатором <i>msgtag</i>, состоящего из <i>count</i> элементов типа <i>datatype</i>, процессу с номером <em>dest</em>. Все элементы сообщения расположены подряд в буфере <em>buf</em>. Значение <em>count</em> может быть нулем. Тип передаваемых элементов <em>datatype</em> должен указываться с помощью предопределенных констант типа. Разрешается передавать сообщение самому себе. 
<p >Блокировка гарантирует корректность повторного использования всех параметров после возврата из подпрограммы. Выбор способа осуществления этой гарантии: копирование в промежуточный буфер или непосредственная передача процессу <em>dest</em>, остается за MPI. Следует специально отметить, что возврат из подпрограммы <em>MPI_Send</em> не означает ни того, что сообщение уже передано процессу <em>dest</em>, ни того, что сообщение покинуло процессорный элемент, на котором выполняется процесс, выполнивший <em>MPI_Send</em>. 
    <br><br>
<p><b>int MPI_Recv</b>(void* buf, int count, MPI_Datatype datatype, int source, int msgtag, MPI_Comm comm, MPI_Status *status)
<ul class="list">
<li>OUT <em>buf</em> - адрес начала буфера приема сообщения 
<li><em>count</em> - максимальное число элементов в принимаемом сообщении 
<li><em>datatype</em> - тип элементов принимаемого сообщения 
<li><em>source</em> - номер процесса-отправителя 
<li><em>msgtag</em> - идентификатор принимаемого сообщения 
<li><em>comm</em> - идентификатор группы 
<li>OUT <em>status</em> - параметры принятого сообщения </li></ul>
</p>
<p >Прием сообщения с идентификатором <em>msgtag</em> от процесса <em>source</em> с блокировкой. Число элементов в принимаемом сообщении не должно превосходить значения <em>count</em>. Если число принятых элементов меньше значения <em>count</em>, то гарантируется, что в буфере <em>buf</em> изменятся только элементы, соответствующие элементам принятого сообщения. Если нужно узнать точное число элементов в сообщении, то можно воспользоваться подпрограммой <em>MPI_Probe</em>. 
<p >Блокировка гарантирует, что после возврата из подпрограммы все элементы сообщения приняты и расположены в буфере <em>buf</em>. 
<p >В качестве номера процесса-отправителя можно указать предопределенную константу <em>MPI_ANY_SOURCE</em> - признак того, что подходит сообщение от любого процесса. В качестве идентификатора принимаемого сообщения можно указать константу <em>MPI_ANY_TAG</em> - признак того, что подходит сообщение с любым идентификатором. 
<p >Если процесс посылает два сообщения другому процессу и оба эти сообщения соответствуют одному и тому же вызову <em>MPI_Recv</em>, то первым будет принято то сообщение, которое было отправлено раньше. 
    <br><br>
<p><b>int MPI_Get_count</b>( MPI_Status *status, MPI_Datatype datatype, int *count)
<ul class="list">
<li><em>status</em> - параметры принятого сообщения 
<li><em>datatype</em> - тип элементов принятого сообщения 
<li>OUT <em>count</em> - число элементов сообщения </li></ul>
<p>По значению параметра <em>status</em> данная подпрограмма определяет число уже принятых (после обращения к <em>MPI_Recv</em>) или принимаемых (после обращения к <em>MPI_Probe</em> или <em>MPI_Iprobe</em>) элементов сообщения типа <em>datatype</em>. 
    <br><br>
<p><b>int MPI_Probe</b>( int source, int msgtag, MPI_Comm comm, MPI_Status *status)
<ul class="list">
<li><em>source</em> - номер процесса-отправителя или <em>MPI_ANY_SOURCE</em> 
<li><em>msgtag</em> - идентификатор ожидаемого сообщения или <em>MPI_ANY_TAG</em> 
<li><em>comm</em> - идентификатор группы <br>

<li>OUT <em>status</em> - параметры обнаруженного сообщения <br>
</li></ul>
<p >Получение информации о структуре ожидаемого сообщения с блокировкой. Возврата из подпрограммы не произойдет до тех пор, пока сообщение с подходящим идентификатором и номером процесса-отправителя не будет доступно для получения. Атрибуты доступного сообщения можно определить обычным образом с помощью параметра <em>status</em>. Следует обратить внимание, что подпрограмма определяет только факт прихода сообщения, но реально его не принимает. 



</BODY>
</HTML>