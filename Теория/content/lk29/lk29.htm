<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//RU">
<HTML>

<HEAD>
    <LINK rel=stylesheet href="../../css/styles.css" type=text/css>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
    <META HTTP-EQUIV="Content-Language" CONTENT="ru">
    <title>Тема №29</title>
    <base target="_top">
</HEAD>

<BODY>
    <div class="title-1">
        Тема №29 "JPA, Hibernate"
    </div>
    <div class="content">
        <p>
            <b>JPA</b> (Java Persistence API) - это спецификация Java EE и Java SE, описывающая систему управления сохранением
            java-объектов в таблицы реляционных баз данных в удобном виде. Сама Java не содержит реализации JPA, однако существует
            много реализаций данной спецификации от разных компаний (открытых и нет). Это не единственный способ сохранения
            java объектов в базы данных (ORM систем), но один из самых популярных в Java мире.
        </p>
        <p>
            У JPA существуют разные реализации:
            <ul class="list">
                <li>Hibernate </li>
                <li>Oracle TopLink</li>
                <li>Apache OpenJPA </li>
            </ul>
        </p>
        <p>
            <b>Hibernate</b> - это механизм отображения в реляционной базе данных объектов java. Hibernate не только заботится
            об отражении классов Java в таблицы БД (и типов данных Java в типы данных SQL), но также обеспечивает запрос
            данных и поисковые средства и может значительно сократить время разработки которое тратится на ручное написание
            SQL и JDBC кода.
        </p>
        <p>
            <u>Основные возможности:</u>
            <ol class="list">
                <li>Автоматическая генерация и обновление таблиц в БД.</li>
                <li>Поскольку основные запросы к БД представлены как методы Hibernate, то значительно сокращается код.</li>
                <li>Обеспечение использование SQL подобного языка. </li>
            </ol>
        </p>
        <p>
            При связи
            <b>один-­к­-одному</b> каждая запись в одной таблице напрямую связана с отдельной записью в другой таблице. Для
            того, чтобы связать сущности отношением один­-к-­одному в Hibernate используется аннотация @OneToOne. В целом,
            может быть 3 варианта ее использования:
            <ul class="list">
                <li>связанные сущности используют одно и тоже значение первичного ключа; </li>
                <li>внешний ключ определяется полем одной из сущностей (это поле в БД должно быть уникальным для имитации отношения
                    один­к­одному);
                </li>
                <li>используется таблица для хранения ссылки между двумя сущностями (ограничение уникальности должно быть установлено
                    на каждом из полей для того, чтобы соответствовать кратности один­-к-­одному).</li>
            </ul>
        </p>
        <p>
            Ассоциация
            <b>один­-ко-­многим</b> возникает тогда, когда каждой записи в таблице А, соответствует множество записей в таблице
            Б, но каждая запись в таблице Б имеет лишь одну соответствующую запись в таблице А.
        </p>
        <br>
        <p>
            Связь <b>многие-­ко-­многим</b> используется, когда записи из таблицы А может соответствовать 0 или более записей в таблице Б и
            наоборот для каждой записи из Б есть 0 или более записей таблицы А.
        </p>
    </div>
</BODY>

</HTML>