<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//RU">
<HTML>
<HEAD>
  <LINK rel=stylesheet href="../../css/styles.css" type=text/css>
  <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
  <META HTTP-EQUIV="Content-Language" CONTENT="ru">
  <title>Тема №8</title>
  <base target="_top">
</HEAD>
<BODY>
  <div class="title-1">
    Тема №8 "Лексика языка Java "
  </div>
  <div class="content">
   
    <div class="title-2">
      8.1  Анализ программы: пробелы, комментарии, лексемы
    </div>
    <p>
      <b>Анализ программы</b>
      Компилятор, анализируя программу, сразу разделяет ее на
      <ul class="list">
        <li>пробелы (white spaces);
          <li>комментарии (comments);
          </li>
        </ul>
      </p>
      <p> <b><i>Пробелы</i></b>
        Пробелами в данном случае называют все символы, разбивающие текст программы на лексемы. Это как сам символ пробела (space, \u0020, десятичный код 32), так и знаки табуляции и перевода строки. Они используются для разделения лексем, а также для оформления кода, чтобы его было легче читать. 
      </p>
      <p>
        Итак, пробелами в Java считаются:
        <ul class="list">
          <li>ASCII-символSP, space, пробел, \u0020, десятичный код 32;
            <li>ASCII-символHT, horizontal tab, символ горизонтальной табуляции, \u0009, десятичный код 9;
              <li>ASCII-символFF, form feed, символ перевода страницы (был введен для работы с принтером), \u000c, десятичный код 12;
                <li>завершение строки. 
                </ul>
              </p>
              <p> <b><i> Комментарии</i></b>
                Комментарии не влияют на результирующий бинарный код и используются только для ввода пояснений к программе.
              </p>
              <p>
                В Java комментарии бывают 2 видов:
                <ul class="list">
                  <li>строчные
                    <li>блочные
                    </ul>
                  </p>
                  <p>
                    <i>Строчные </i>комментарии начинаются с ASCII-символов //и длятся до конца текущей строки.</p>
                    <p>
                      <i>Блочные</i> комментарии располагаются между ASCII-символами /*и */, могут занимать произвольное количество строк, например:
                      Блочный комментарий не обязательно должен располагаться на нескольких строках, он может даже находится в середине оператора:
                    </p>
                    <div class="title-2">
                      8.2  Виды лексем: идентификаторы,ключевые слова, литералы
                    </div>
                    <p>
                      <b><i> Лексемы</i></b>
                      Ниже перечислены все виды лексем в Java:
                      <ul class="list">
                        <li>идентификаторы (identifiers);
                          <li>ключевые слова (key words);
                            <li>литералы (literals);
                              <li>разделители (separators);
                                <li>операторы (operators).
                                </ul>
                              </p>
                              <p>

                                <b><i>Идентификаторы</i></b> - это имена, которые даются различным элементам языка для упрощения доступа к ним. Имена имеют пакеты, классы, интерфейсы, поля, методы, аргументы и локальные переменные (все эти понятия подробно рассматриваются в дальнейших главах). Идентификаторы можно записывать символами Unicode, то есть, на любом удобном языке. Длина имени не ограничена.
                              </p>
                              <p>
                                Идентификатор состоит из букв и цифр. Имя не может начинаться с цифры. Java-буквы,используемые в идентификаторах, включают в себяASCII-символыA-Z(\u0041-\u005a),a-z(\u0061-\u007a),а также знаки подчеркивания _ (ASCII underscore, \u005f) и доллара $ (\u0024). Знак доллара используется только при автоматической генерации кода (чтобы исключить случайное совпадение имен), либо при использованиикаких-либостарых библиотек, в которых допускались имена с этим символом.Java-цифрывключают в себя обычныеASCII-цифры0-9(\u0030-\u0039).
                              </p>
                              <br>
                              <p> <b><i>Ключевые слова: </i></b>
                                <i>abstract
                                  default
                                  if
                                  private
                                  this
                                  boolean
                                  do
                                  implements
                                  protected
                                  throw
                                  break
                                  else
                                  import
                                  public
                                  throws
                                  byte
                                  extends
                                  instanceof
                                return</i>
                              </p>
                              <br>
                              <p>

                                <b><i>Литералы </i></b>позволяют задать в программе значения для числовых, символьных и строковых выражений, а также null-литералов.Всего в Java определены следующие виды литералов:
                                <ul class="list">
                                  <li>целочисленный (integer);
                                    <li>дробный (floating-point);
                                      <li>булевский (boolean);
                                        <li>символьный (character);
                                          <li>строковый (string);
                                            <li>null-литерал(null-literal).
                                            </ul>
                                          </p>
                                          <p>
                                           <b><i>Строковые литералы</i></b>
                                           Строковые литералы состоят из набора символов и записываются в двойных кавычках. Длина может быть нулевой или сколь угодно большой. Любой символ может быть представлен специальной последовательностью, начинающейся с \ (см. "Символьные литералы").
                                           "" // литерал нулевой длины "\"" //литерал, состоящий из одного символа "
                                         "Простой текст" //литерал длины 13</p>
                                         <p>
                                          Строковый литерал нельзя разбивать на несколько строк в коде программы. Если требуется текстовое значение, состоящее из нескольких строк, то необходимо воспользоваться специальными символами \n и/или \r. Если же текст просто слишком длинный, чтобы уместиться на одной строке кода, то можно использовать оператор конкатенации строк +. 
                                        </p>
                                        <div class="title-2">
                                          8.3  Операторы языка Java
                                        </div>
                                        <p><b><i>Арифмитические</i></b>
                                         + Сложение 
                                         - Вычитание 
                                         * Умножение
                                         / Деление
                                         % Вычисление остатка
                                         ++ Инкремент
                                         -- Декремент
                                         += Присваивание со сложением
                                         -= Присваивание с вычитанием
                                         *= Присваивание с умножением
                                         /= Присваивание с делением
                                         %= Присваивание с вычислением остатка
                                       </p>
                                       <p>
                                         <b><i>  Битовые (поразрядные) операторы</i></b>

                                         - Унарное отрицание
                                         & Поразрядное И
                                         | Поразрядное ИЛИ
                                         ^ Поразрядное исключающее ИЛИ
                                         << Сдвиг битов влево
                                         >> Сдвиг битов вправо
                                         >>> Сдвиг битов вправо с заполнением старшего бита нулем
                                         &=, | =, ^=, <<=, >>=, >>>= Присвоение с аналогичной операцией
                                       </p>
                                       <p>
                                        <b><i>   Логические операторы</i></b>
                                        
                                        = = Равно
                                        != Не равно
                                        < Меньше
                                        < = Меньше или равно
                                        > Больше
                                        > = Больше или равно
                                        & Логическое и
                                        | Логическое или
                                        ^ Логическое исключающее или
                                        ! Отрицание
                                        && Условное и
                                        | | Условное или
                                        &=, |=, ^= Присваивание с аналогичным оператором
                                      </p>
                                      
                                    </BODY>
                                  </HTML>