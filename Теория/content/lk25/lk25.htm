<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//RU">
<HTML>

<HEAD>
    <LINK rel=stylesheet href="../../css/styles.css" type=text/css>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
    <META HTTP-EQUIV="Content-Language" CONTENT="ru">
    <title>Тема №25</title>
    <base target="_top">
</HEAD>

<BODY>
    <div class="title-1">
        Тема №25 "AJAX, JSON"
    </div>
    <div class="content">
        <div class="title-2">
            25.1 AJAX
        </div>
        <p>
            <b>AJAX</b> — подход к построению интерактивных пользовательских интерфейсов веб-приложений, заключающийся в «фоновом»
            обмене данными браузера с веб-сервером. В результате, при обновлении данных веб-страница не перезагружается полностью,
            и веб-приложения становятся быстрее и удобнее.
        </p>
        <p>
            В классической модели веб-приложения:
            <ul class="list">
                <li>Пользователь заходит на веб-страницу и нажимает на какой-нибудь её элемент.</li>
                <li>Браузер формирует и отправляет запрос серверу.</li>
                <li>В ответ сервер генерирует совершенно новую веб-страницу и отправляет её браузеру и т. д., после чего браузер
                    полностью перезагружает всю страницу.</li>
            </ul>
        </p>
        <p>
            При использовании AJAX:
            <ul class="list">
                <li>Пользователь заходит на веб-страницу и нажимает на какой-нибудь её элемент.</li>
                <li>Скрипт (на языке JavaScript) определяет, какая информация необходима для обновления страницы.</li>
                <li>Браузер отправляет соответствующий запрос на сервер.</li>
                <li>Сервер возвращает только ту часть документа, на которую пришёл запрос.</li>
                <li>Скрипт вносит изменения с учётом полученной информации (без полной перезагрузки страницы).</li>
            </ul>
        </p>
        <p>
            AJAX — не самостоятельная технология, а концепция использования нескольких смежных технологий. AJAX базируется на двух основных
            принципах:
            <ul class="list">
                <li>
                    использование технологии динамического обращения к серверу «на лету», без перезагрузки всей страницы полностью, например
                    с использованием XMLHttpRequest (основной объект);
                    <ul class="list">
                        <li>через динамическое создание дочерних фреймов;</li>
                        <li>через динамическое создание тега &lt;script&gt;;
                        </li>
                        <li>через динамическое создание тега &lt;img&gt;, как это реализовано в Google Analytics.</li>
                    </ul>
                </li>
                <li>использование DHTML для динамического изменения содержания страницы;</li>
            </ul>
        </p>
        <div class="title-2">
            25.2 JSON
        </div>
        <p>
            <b>JSON</b> — текстовый формат обмена данными, основанный на JavaScript. Как и многие другие текстовые форматы,
            JSON легко читается людьми.
        </p>
        <p>
            Несмотря на происхождение от JavaScript (точнее, от подмножества языка стандарта ECMA-262 1999 года), формат считается независимым
            от языка и может использоваться практически с любым языком программирования. Для многих языков существует готовый
            код для создания и обработки данных в формате JSON.
        </p>
        <p>
            За счёт своей лаконичности по сравнению с XML, формат JSON может быть более подходящим для сериализации сложных структур.
            Если говорить о веб-приложениях, в таком ключе он уместен в задачах обмена данными как между браузером и сервером
            (AJAX), так и между самими серверами (программные HTTP-сопряжения).
        </p>
        <p>
            JSON-текст представляет собой (в закодированном виде) одну из двух структур:
            <ul class="list">
                <li>Набор пар ключ: значение. В различных языках это реализовано как объект, запись, структура, словарь, хэш-таблица,
                    список с ключом или ассоциативный массив. Ключом может быть только строка (регистрозависимая: имена с
                    буквами в разных регистрах считаются разными), значением — любая форма.</li>
                <li>Упорядоченный набор значений. Во многих языках это реализовано как массив, вектор, список или последовательность.</li>
            </ul>
        </p>
        <p>
            Это универсальные структуры данных: как правило, любой современный язык программирования поддерживает их в той или иной форме.
            Они легли в основу JSON, так как он используется для обмена данными между различными языками программирования.
        </p>
        <p>
            В качестве значений в JSON могут быть использованы:
            <ul class="list">
                <li>Объект — это неупорядоченное множество пар ключ:значение, заключённое в фигурные скобки «{ }». Ключ описывается
                    строкой, между ним и значением стоит символ «:». Пары ключ-значение отделяются друг от друга запятыми.</li>
                <li>Массив (одномерный) — это упорядоченное множество значений. Массив заключается в квадратные скобки «[ ]».
                    Значения разделяются запятыми.</li>
                <li>Число</li>
                <li>Литералы true, false и null.</li>
                <li>Строка — это упорядоченное множество из нуля или более символов юникода, заключённое в двойные кавычки. Символы
                    могут быть указаны с использованием escape-последовательностей, начинающихся с обратной косой черты «\»
                    (поддерживаются варианты \", \\, \/, \t, \n, \r, \f и \b), или записаны шестнадцатеричным кодом в кодировке
                    Unicode в виде \uFFFF.</li>
            </ul>
        </p>
    </div>
</BODY>

</HTML>