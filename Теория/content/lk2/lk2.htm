    <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//RU">
    <HTML>
    <HEAD>
        <LINK rel=stylesheet href="../../css/styles.css" type=text/css>
        <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
        <META HTTP-EQUIV="Content-Language" CONTENT="ru">
        <title>Тема №2</title>
        <base target="_top">
    </HEAD>
    <BODY>
      <div class="title-1">
        Тема №2 "Высокопродуктивное программирование"
    </div>
    <div class="content">
        <div class="title-2">
            2.1 Обеспечение высокопродуктивного программирования для современных параллельных платформ
        </div>
        <p>
            Развитие компьютерных и сетевых технологий привело к тому, что одним из основных свойств современных вычислительных систем является параллелизм на всех уровнях. Остро встал вопрос о языках параллельного программирования, которые могли бы обеспечить достаточно высокую производительность труда программистов, разрабатывающих параллельные приложения. Однако языки, разработанные в 90-е годы (HPF, UPC и др.) не смогли решить эту проблему. Это привело к тому, что промышленную разработку прикладных параллельных программ, обеспечивающих необходимое качество, приходится вести, на так называемом «ассемблерном» уровне, на последовательных языках программирования (C/C++, Fortran), разработанных в 60-70 гг., с явным использованием обращений к коммуникационной библиотеке MPI (для систем с распределенной памятью), явным указанием прагм ОрепМР (для систем с общей памятью), с использованием технологии программирования CUDA (расширение языка С для акселераторов Nvidia), которая точно отражает организацию оборудования, что позволяет создавать эффективные программы, но требует высокого уровня понимания архитектуры акселератора и др.
        </p>
        <p>
            В настоящее время параллельное программирование связано с ручной доводкой программ (распределение данных, шаблоны коммуникаций, либо синхронизации доступа к критическим данным и т.п.). Эго связано со значительными затратами ресурсов и требует высокой квалификации прикладных программистов. Цена, которую нужно заплатить, чтобы добиться хорошей производительности и требуемой степени масштабируемости приложений, часто оказывается непомерно высокой. Поэтому целью современных исследований является фундаментальная проблема высокой продуктивности разработки параллельных приложений, когда обеспечивается достаточный уровень производительности при приемлемом уровне затрат на разработку. Эго особенно актуально в связи с тем, что параллельное программирование становиться массовым.
        </p>
        <p>
            Исследования ведутся по многим направлениям:  изучаются свойства приложений, делаются попытки классификации приложений, в том числе для выявления в них общих ядер; исследуются свойства аппаратуры с целью максимального их использования и развития; ведутся исследования и разработки по целому спектру средств программирования.
        </p>
        <p>   
            Одним из таких средств является интегрированная среда <b>ParJava</b>, разработанная в ИСП РАН, которая предоставляет прикладному программисту набор инструментальных средств, поддерживающих разработку параллельных программ для вычислительных систем с распределенной памятью (высокопроизводительных кластеров) на языке Java, расширенном стандартной библиотекой передачи сообщений MPI.
        </p>
        <p> 
            В настоящее время среда Java представляет значительный интерес с точки зрения <i>высокопроизводительных вычислений</i>. Эго связано как с положительными свойствами Java как среды разработки прикладных программ (переносимость, простота отладки и др.), так и с тем, что использование инфраструктуры Java существенно упрощает разработку инструментальных средств. Можно упомянуть такие системы как: ProActive Parallel Suite (INRIA), MPJ Express (University of Reading and University of Southampton), Distributed Parallel Programming Environment for Java (IBM) и др. Кроме того, добавлена поддержка Java + MPI в известной среде разработки параллельных программ на языках C/C++ и Fortran 77/90 TAU.
        </p>
        <p>
            В проекте ParJava решались две задачи:  обеспечить возможность
        </p>
        <p>
          <ul class="list">
            <li><i>эффективного выполнения параллельных программ на языке Java</i> с явными обращениями к MPI на высокопроизводительных кластерных системах 
                <li>и разработать технологический <i>процесс реализации параллельных программ</i>, обеспечивающий возможность переноса как можно большей части разработки на инструментальный компьютер.
                </ul>
            </p>
            
        </BODY>
    </HTML>